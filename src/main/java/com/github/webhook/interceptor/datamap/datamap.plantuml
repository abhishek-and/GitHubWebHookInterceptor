@startuml

title __DATAMAP's Class Diagram__\n

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.BranchProtection {
          - enforce_admins : boolean
          + getRequired_pull_request_reviews()
          + getRequired_status_checks()
          + getRestrictions()
          + isEnforce_admins()
          + setEnforce_admins()
          + setRequired_pull_request_reviews()
          + setRequired_status_checks()
          + setRestrictions()
      }
    }
  }
  

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.CreateEvent {
          - action : String
          + getAction()
          + getRepository()
          + getSender()
          + setAction()
          + setRepository()
          + setSender()
      }
    }
  }
  

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.GithubIssues {
          - body : String
          - title : String
          + getBody()
          + getTitle()
          + setBody()
          + setTitle()
      }
    }
  }
  

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.Repository {
          - issues_url : String
          - url : String
          + getIssues_url()
          + getUrl()
          + setIssues_url()
          + setUrl()
      }
    }
  }
  

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.RequiredPullRequestReviews {
      }
    }
  }
  

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.RequiredStatusChecks {
          - contexts : String[]
          - strict : boolean
          + getContexts()
          + isStrict()
          + setContexts()
          + setStrict()
      }
    }
  }
  

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.Restrictions {
          - teams : String[]
          - users : String[]
          + getTeams()
          + getUsers()
          + setTeams()
          + setUsers()
      }
    }
  }
  

  namespace  {
    namespace om.github.webhook.interceptor.datamap {
      class com.github.webhook.interceptor.datamap.Sender {
          - login : String
          + getLogin()
          + setLogin()
      }
    }
  }
  

  com.github.webhook.interceptor.datamap.BranchProtection o-- com.github.webhook.interceptor.datamap.RequiredPullRequestReviews : required_pull_request_reviews
  com.github.webhook.interceptor.datamap.BranchProtection o-- com.github.webhook.interceptor.datamap.RequiredStatusChecks : required_status_checks
  com.github.webhook.interceptor.datamap.BranchProtection o-- com.github.webhook.interceptor.datamap.Restrictions : restrictions
  com.github.webhook.interceptor.datamap.CreateEvent o-- com.github.webhook.interceptor.datamap.Repository : repository
  com.github.webhook.interceptor.datamap.CreateEvent o-- com.github.webhook.interceptor.datamap.Sender : sender


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
